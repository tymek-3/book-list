// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: publishing.sql

package data

import (
	"context"

	"github.com/google/uuid"
)

const authorsAdd = `-- name: AuthorsAdd :exec
INSERT INTO authors (id, full_name)
VALUES (?, ?)
`

type AuthorsAddParams struct {
	ID       uuid.UUID
	FullName string
}

func (q *Queries) AuthorsAdd(ctx context.Context, arg AuthorsAddParams) error {
	_, err := q.db.ExecContext(ctx, authorsAdd, arg.ID, arg.FullName)
	return err
}

const publishersAdd = `-- name: PublishersAdd :exec
INSERT INTO publishers (id, name)
VALUES (?, ?)
`

type PublishersAddParams struct {
	ID   uuid.UUID
	Name string
}

func (q *Queries) PublishersAdd(ctx context.Context, arg PublishersAddParams) error {
	_, err := q.db.ExecContext(ctx, publishersAdd, arg.ID, arg.Name)
	return err
}

const typesAdd = `-- name: TypesAdd :exec
INSERT INTO types (id, name)
VALUES (?, ?)
`

type TypesAddParams struct {
	ID   uuid.UUID
	Name string
}

func (q *Queries) TypesAdd(ctx context.Context, arg TypesAddParams) error {
	_, err := q.db.ExecContext(ctx, typesAdd, arg.ID, arg.Name)
	return err
}
