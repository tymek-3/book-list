// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package data

import (
	"context"

	"github.com/google/uuid"
)

const userAdd = `-- name: UserAdd :exec
INSERT INTO users (id, name, email, role, password_hash)
VALUES (?, ?, ?, ?, ?)
`

type UserAddParams struct {
	ID           uuid.UUID
	Name         string
	Email        string
	Role         string
	PasswordHash string
}

func (q *Queries) UserAdd(ctx context.Context, arg UserAddParams) error {
	_, err := q.db.ExecContext(ctx, userAdd,
		arg.ID,
		arg.Name,
		arg.Email,
		arg.Role,
		arg.PasswordHash,
	)
	return err
}

const userGetByEmail = `-- name: UserGetByEmail :one
SELECT id, name, email, role, password_hash FROM users
WHERE email = ? LIMIT 1
`

func (q *Queries) UserGetByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRowContext(ctx, userGetByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Role,
		&i.PasswordHash,
	)
	return i, err
}
